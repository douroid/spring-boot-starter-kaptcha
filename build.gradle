/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
buildscript {
    ext {
        versions = [
                spring_boot: "1.5.12.RELEASE",
                propdeps   : "0.0.9.RELEASE",
                jhlabs     : "2.0.235-1",
                servlet    : "3.1.0"
        ]
    }
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${versions.spring_boot}"
        classpath "io.spring.gradle:propdeps-plugin:${versions.propdeps}"
    }
}

apply plugin: 'java'
apply plugin: 'propdeps'
apply plugin: 'org.springframework.boot'

group = 'cn.nextours.kaptcha'
version = '1.0.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"

jar {
    manifest {
        attributes 'Implementation-Title': 'spring-boot-starter-kaptcha', 'Implementation-Version': version
    }

    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    exclude "META-INF/maven/**"
}

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
    mavenCentral()
}

dependencies {
    compile "com.jhlabs:filters:${versions.jhlabs}"

    optional "javax.servlet:javax.servlet-api:${versions.servlet}"
    optional "org.springframework.boot:spring-boot-autoconfigure"
    optional "org.springframework.boot:spring-boot-starter-web"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

compileJava.dependsOn(processResources)